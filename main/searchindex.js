Search.setIndex({"docnames": ["api/conditions", "api/configuration", "api/configurationspace", "api/forbidden_clauses", "api/hyperparameters", "api/index", "api/serialization", "api/utils", "guide", "index", "quickstart"], "filenames": ["api/conditions.rst", "api/configuration.rst", "api/configurationspace.rst", "api/forbidden_clauses.rst", "api/hyperparameters.rst", "api/index.rst", "api/serialization.rst", "api/utils.rst", "guide.rst", "index.rst", "quickstart.rst"], "titles": ["Conditions", "Configuration", "ConfigurationSpace", "Forbidden Clauses", "Hyperparameters", "API", "Serialization", "Utils", "User Guide", "Welcome to ConfigSpace\u2019s documentation!", "Quickstart"], "terms": {"configspac": [0, 1, 2, 3, 4, 6, 7, 8, 10], "can": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "realiz": [0, 8, 10], "equal": [0, 1, 2, 3, 4, 8, 9], "less": 0, "than": [0, 4, 7], "greater": 0, "combin": [0, 2, 3, 8], "us": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "conjunct": [0, 8], "To": [0, 6, 8, 9, 10], "see": [0, 4, 8, 9, 10], "how": [0, 4, 9, 10], "pleas": [0, 3, 4, 6, 8], "take": [0, 2, 3, 4, 8, 10], "look": [0, 2, 3, 8, 10], "user": [0, 2, 3, 4, 9, 10], "guid": [0, 1, 3, 9, 10], "class": [0, 1, 2, 3, 4, 6, 10], "hyperparamet": [0, 1, 2, 3, 5, 6, 7, 9, 10], "child": [0, 8], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "parent": [0, 2, 8, 10], "being": [0, 4, 7, 8], "valu": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "make": [0, 4, 8, 10], "b": [0, 2, 3, 4, 9, 10], "an": [0, 1, 2, 4, 6, 8, 10], "activ": [0, 1, 2, 7, 8, 9, 10], "ha": [0, 1, 4, 6, 8, 9, 10], "1": [0, 2, 3, 4, 6, 8, 9, 10], "from": [0, 2, 3, 4, 6, 7, 8, 9, 10], "import": [0, 3, 4, 6, 8, 9, 10], "configurationspac": [0, 1, 3, 5, 6, 7, 8, 9, 10], "c": [0, 1, 2, 3, 4, 6, 8, 9, 10], "2": [0, 3, 4, 6, 8, 9, 10], "3": [0, 3, 4, 6, 8, 9], "0": [0, 2, 4, 6, 8, 9, 10], "8": [0, 4, 8, 10], "cond": [0, 9], "add_condit": [0, 2, 8, 9, 10], "paramet": [0, 1, 2, 3, 4, 6, 7, 8, 10], "thi": [0, 1, 2, 4, 6, 7, 8, 9, 10], "sampl": [0, 2, 3, 4, 7, 8, 9, 10], "satisfi": 0, "The": [0, 1, 2, 3, 4, 6, 7, 8, 10], "which": [0, 1, 2, 3, 4, 6, 7, 8, 10], "str": [0, 1, 2, 4, 6, 7, 10], "float": [0, 2, 7, 9, 10], "int": [0, 1, 2, 4, 6, 7, 10], "compar": 0, "5": [0, 3, 4, 7, 8, 9, 10], "10": [0, 2, 4, 8, 9, 10], "set": [0, 1, 2, 4, 7, 9, 10], "4": [0, 4, 8, 10], "list": [0, 1, 2, 3, 4, 7], "collect": [0, 2, 3, 4], "By": [0, 4], "constraint": [0, 1, 3, 8, 9, 10], "easili": [0, 8], "connect": 0, "follow": [0, 4, 8, 10], "exampl": [0, 3, 4, 6, 7, 10], "show": [0, 8, 10], "two": [0, 2, 8, 10], "15": 0, "less_cond": 0, "greater_cond": 0, "arg": [0, 2, 3], "similar": [0, 1, 8], "configuration_spac": [1, 2, 6, 7, 10], "none": [1, 2, 4, 10], "vector": [1, 2, 4, 7, 8], "allow_inactive_with_valu": 1, "fals": [1, 4, 6, 8], "origin": [1, 4], "config_id": 1, "singl": [1, 2, 4], "object": [1, 2, 6, 7, 8, 10], "hold": [1, 2, 4], "all": [1, 2, 4, 7, 10], "while": [1, 4], "store": [1, 2, 4, 8], "definit": [1, 2, 6, 8], "rang": [1, 3, 4, 8, 9, 10], "more": [1, 4, 7, 8, 9, 10], "instanc": [1, 8], "access": [1, 4, 8], "modifi": [1, 7, 8], "python": [1, 8, 9, 10], "dictionari": [1, 2, 7, 8, 10], "f": [1, 6, 9], "dict": [1, 2, 3, 4, 7], "option": [1, 2, 4, 7], "A": [1, 2, 3, 4, 6, 7, 9, 10], "pair": 1, "hyperparameter_nam": 1, "where": [1, 2, 9, 10], "legal": [1, 2, 4], "abov": [1, 4], "np": [1, 2, 4, 7, 8], "ndarrai": [1, 2, 4, 7], "numpi": [1, 8, 9], "arrai": [1, 2, 8], "effici": [1, 7], "represent": [1, 2, 4, 6], "either": [1, 2, 4, 7, 8], "given": [1, 2, 4, 7, 8], "bool": [1, 2, 4, 6], "whether": [1, 4], "except": [1, 2, 4, 7], "rais": [1, 2, 7], "inact": [1, 7], "default": [1, 2, 4, 6, 7, 8, 9, 10], "ani": [1, 2, 3, 4, 6, 10], "inform": [1, 4, 6, 10], "about": [1, 4, 8, 9, 10], "integ": [1, 9, 10], "id": [1, 2, 4, 8], "program": 1, "packag": [1, 9, 10], "__eq__": [1, 2], "other": [1, 2, 6], "overrid": [1, 2], "behavior": [1, 2], "return": [1, 2, 4, 6, 7, 10], "type": [1, 2, 5, 6, 7, 8, 9, 10], "__hash__": [1, 2], "hash": [1, 2], "__ne__": [1, 2], "defin": [1, 2, 4, 7, 8, 10], "non": [1, 2], "test": [1, 2], "get": [1, 2, 4], "item": [1, 2, 4, 9, 10], "name": [1, 2, 4, 7, 9], "doesn": 1, "t": [1, 2, 4, 8, 10], "exist": [1, 2, 4, 6], "desir": 1, "get_arrai": 1, "intern": [1, 2], "continu": [1, 8, 10], "ar": [1, 2, 4, 6, 7, 8, 9, 10], "scale": [1, 4, 8], "between": [1, 2, 8, 9, 10], "zero": [1, 4], "one": [1, 2, 4, 7, 10], "get_dictionari": 1, "form": [1, 4, 7, 8], "is_valid_configur": 1, "check": [1, 2, 4, 8], "valid": [1, 2, 8, 10], "error": [1, 2], "like": [1, 2, 4, 8, 10], "provid": [1, 2, 4, 6], "view": [1, 2], "d": [1, 2], "": [1, 2, 3, 4, 6, 10], "kei": [1, 2, 7, 10], "cach": 1, "speed": 1, "up": [1, 4, 9, 10], "process": [1, 10], "retriev": 1, "seed": [2, 7, 8, 9, 10], "meta": [2, 4], "space": [2, 3, 4, 6, 7, 8, 9, 10], "contain": [2, 3, 4, 7, 8, 9], "condit": [2, 3, 5, 7, 9, 10], "configur": [2, 3, 4, 5, 6, 7, 8, 9, 10], "organ": 2, "its": [2, 4, 8, 9, 10], "well": [2, 6, 8, 10], "forbidden": [2, 4, 5, 9, 10], "claus": [2, 5, 9, 10], "As": [2, 8], "underli": [2, 4], "data": [2, 4, 10], "structur": [2, 10], "tree": [2, 7], "base": [2, 7, 10], "approach": 2, "repres": [2, 4, 6, 8], "restrict": [2, 3, 8], "If": [2, 4, 7, 8, 9, 10], "pass": [2, 4, 10], "consid": [2, 8], "same": [2, 4, 7], "random": [2, 4, 7], "field": [2, 4], "Not": [2, 4], "tupl": [2, 4, 7], "simpl": [2, 5, 6, 8, 9, 10], "myspac": [2, 9], "uniform_integ": 2, "uniform_float": 2, "categor": [2, 6, 7, 9, 10], "constant": [2, 8], "1337": 2, "__iter__": 2, "allow": [2, 3, 4, 8], "iter": [2, 7, 8], "over": [2, 4, 7, 8, 10], "hopefulli": 2, "right": 2, "order": [2, 4, 7, 8], "add": [2, 4, 8, 9, 10], "ad": [2, 10], "statement": 2, "must": [2, 4, 7, 8, 10], "cycl": 2, "keep": 2, "track": [2, 4], "edg": 2, "digraph": 2, "don": [2, 8, 10], "final": [2, 8, 10], "end": 2, "function": [2, 4, 7, 8, 9], "input": [2, 4, 7, 8], "thei": 2, "add_configuration_spac": [2, 10], "prefix": [2, 10], "delimit": [2, 10], "parent_hyperparamet": [2, 10], "content": 2, "should": [2, 3, 6, 7, 10], "renam": 2, "old_nam": 2, "each": [2, 4, 7, 8, 10], "new": [2, 5, 7, 8], "mean": [2, 4, 8], "when": [2, 4, 8, 9, 10], "wa": 2, "add_forbidden_claus": [2, 3, 8], "add_hyperparamet": [2, 6, 8, 9], "check_configur": 2, "check_configuration_vector_represent": 2, "estimate_s": 2, "estim": 2, "size": [2, 4], "current": 2, "e": [2, 4, 8], "uniqu": 2, "inf": 2, "case": [2, 8], "uniformfloathyperparamet": [2, 4, 7], "otherwis": [2, 4, 7], "product": [2, 7], "correctli": [2, 10], "guess": 2, "number": [2, 4, 6, 7, 8], "upper": [2, 4], "bound": [2, 4, 8, 9, 10], "generate_grid": [2, 5, 7], "gener": [2, 7, 10], "requir": [2, 4, 9], "union": 2, "generate_all_continuous_from_bound": 2, "lower": [2, 4, 7], "element": [2, 4, 7], "k": [2, 9], "els": [2, 10], "get_active_hyperparamet": 2, "get_all_conditional_hyperparamet": 2, "get_all_unconditional_hyperparamet": 2, "uncondit": 2, "part": [2, 4, 6], "get_child_conditions_of": 2, "children": 2, "referenc": 2, "request": 2, "get_children_of": 2, "get_condit": 2, "get_default_configur": 2, "get_forbidden": 2, "get_hyperparamet": 2, "give": [2, 4], "search": [2, 4, 7, 8], "get_hyperparameter_by_idx": 2, "idx": 2, "get_hyperparameter_nam": 2, "get_hyperparameters_dict": 2, "ordereddict": [2, 7], "get_idx_by_hyperparameter_nam": 2, "get_parent_conditions_of": 2, "get_parents_of": 2, "keysview": 2, "remove_hyperparameter_prior": 2, "produc": 2, "prior": 2, "remov": [2, 7], "uniform": [2, 4, 9], "hyperpararmet": 2, "replac": [2, 7], "ones": 2, "categoricalhyperparamet": [2, 4, 6], "weight": [2, 4, 8, 9, 10], "have": [2, 3, 4, 7, 8, 10], "result": 2, "without": [2, 4], "sample_configur": [2, 8, 9, 10], "static": 2, "substitute_hyperparameters_in_condit": 2, "new_configspac": 2, "namesak": 2, "remain": [2, 4], "unchang": 2, "includ": [2, 7, 8, 9, 10], "chang": [2, 6, 7, 10], "match": 2, "those": [2, 8, 9], "adjust": 2, "fit": 2, "conditioncompon": 2, "substitute_hyperparameters_in_forbidden": 2, "abstractforbiddencompon": 2, "forbid": [3, 8], "certain": [3, 4, 8], "met": [3, 8], "For": [3, 4, 7, 8, 10], "further": [3, 4, 6, 8], "It": [3, 7, 8, 9], "forbidden_clause_a": 3, "method": [3, 4, 7, 8], "made": 3, "subset": 3, "build": [3, 9, 10], "power": [3, 10], "6": [3, 8], "forbidden_clause_b": 3, "forbidden_claus": 3, "hyperparamt": [4, 7, 10], "own": [4, 10], "customiz": 4, "you": [4, 8, 9, 10], "find": [4, 7, 8], "interfac": 4, "much": 4, "abl": [4, 7], "your": [4, 8, 10], "custom": [4, 7, 9], "discret": 4, "un": 4, "choic": [4, 6, 8, 9], "One": 4, "also": [4, 8, 10], "true": [4, 8, 9], "ordinalhyperparamet": 4, "These": [4, 6, 8, 10], "conveni": 4, "construct": 4, "complex": [4, 8, 10], "g": 4, "uniformintegerhyperparamet": [4, 7], "backbon": 4, "what": [4, 10], "possibl": [4, 6, 7, 8, 10], "mai": [4, 8], "still": 4, "differ": [4, 8, 9, 10], "just": [4, 8, 10], "usag": [4, 8, 9], "shown": [4, 8], "below": 4, "api": 4, "q": 4, "log": [4, 8, 9], "sourc": [4, 6, 9], "normal": [4, 8, 9, 10], "normalfloathyperparamet": 4, "beta": [4, 8], "betafloathyperparamet": 4, "creat": [4, 6, 7, 8, 9, 10], "floathyperparamet": 4, "uniformli": 4, "std": 4, "alpha": [4, 8, 10], "100": [4, 8], "quantiz": 4, "three": [4, 8, 10], "bracket": 4, "info": [4, 9], "param": [4, 10], "count": 4, "chicken": 4, "actual": [4, 10], "correspond": [4, 7], "do": [4, 8, 10], "isinst": 4, "note": [4, 8], "factor": [4, 10], "evenli": 4, "divid": [4, 7], "boundari": 4, "point": [4, 7, 8, 10], "act": 4, "experiment": 4, "http": [4, 8], "github": 4, "com": 4, "automl": [4, 9, 10], "issu": 4, "264": 4, "live": 4, "want": [4, 8, 10], "associ": 4, "normalintegerhyperparamet": 4, "betaintegerhyperparamet": 4, "integerhyperparamet": 4, "full": 4, "7": [4, 9], "here": [4, 6, 8], "sequenc": 4, "liter": 4, "specifi": [4, 7, 8], "some": [4, 8, 10], "manner": 4, "small": 4, "medium": 4, "larg": 4, "anim": 4, "cat": [4, 9], "dog": [4, 9], "mous": [4, 9], "With": 4, "them": [4, 6, 8, 9, 10], "14": 4, "categori": 4, "appli": [4, 8], "o": 4, "favourit": 4, "put": [4, 10], "limit": [4, 8], "string": [4, 6, 10], "instead": 4, "convert": [4, 8], "duplic": 4, "accord": 4, "addit": [4, 8], "would": [4, 10], "along": 4, "basic": 4, "mu": [4, 8, 10], "sigma": [4, 8, 10], "standard": [4, 7, 8], "deviat": [4, 7, 8], "expos": 4, "through": [4, 7, 8], "Its": 4, "u": [4, 10], "uniforminteg": 4, "55": 4, "default_valu": 4, "logarithm": 4, "get_max_dens": 4, "maxim": 4, "densiti": 4, "pdf": [4, 8], "so": [4, 8, 10], "mode": 4, "get_neighbor": 4, "neighbor": [4, 7], "assum": [4, 8], "unit": 4, "hypercub": 4, "around": [4, 7, 8], "been": [4, 7], "done": [4, 9], "_inverse_transform": 4, "r": [4, 6, 8], "randomst": 4, "state": [4, 7, 8], "mani": 4, "transform": 4, "cube": 4, "back": 4, "dev": [4, 9], "center": 4, "is_legal_vector": 4, "comput": [4, 7], "probabl": [4, 8], "_pdf": 4, "oper": 4, "possibli": 4, "onli": [4, 7, 8, 9, 10], "posit": 4, "n": [4, 8], "rv": 4, "scipi": 4, "compat": 4, "wrapper": 4, "_sampl": 4, "sklearn": [4, 8, 9, 10], "searcher": 4, "eg": 4, "gridsearchcv": 4, "mathcal": [4, 8], "normalinteg": 4, "move": 4, "appropri": 4, "shape": 4, "preserv": 4, "were": [4, 7], "betainteg": 4, "uniformfloat": [4, 9], "normalfloat": [4, 8], "betafloat": [4, 8], "disribut": 4, "total": 4, "pars": [4, 10], "code": 4, "159": 4, "_": 4, "detail": [4, 6], "red": 4, "green": 4, "blue": 4, "after": 4, "dure": 4, "neg": 4, "to_uniform": 4, "local": 4, "pibo": [4, 8], "openreview": [4, 8], "net": [4, 8], "forum": [4, 8], "mmaecxia89": [4, 8], "ident": 4, "20": 4, "30": 4, "check_default": 4, "we": [4, 8, 10], "simpli": 4, "choos": [4, 8], "first": [4, 8, 10], "our": [4, 9, 10], "check_ord": 4, "value1": 4, "smaller": 4, "value2": 4, "work": [4, 8, 10], "get_num_neighbor": 4, "get_ord": 4, "seuenc": 4, "get_seq_ord": 4, "numer": [4, 10], "length": 4, "get_valu": 4, "has_neighbor": 4, "re": [4, 10], "deal": 4, "is_leg": 4, "treat": 4, "uniformhyperparamet": 4, "regard": 4, "time": [4, 8], "drawn": 4, "distribut": [5, 8, 9, 10], "advanc": 5, "equalscondit": [5, 8, 9, 10], "notequalscondit": [5, 8], "lessthancondit": [5, 8], "greaterthancondit": [5, 8], "incondit": [5, 8], "andconjunct": 5, "orconjunct": [5, 8], "forbiddenequalsclaus": [5, 8], "forbiddeninclaus": 5, "forbiddenandconjunct": [5, 8], "serial": [5, 9, 10], "json": [5, 8], "pc": [5, 8], "format": [5, 8, 9], "old": [5, 10], "util": 5, "deactivate_inactive_hyperparamet": [5, 7], "fix_typ": [5, 7], "get_one_exchange_neighbourhood": [5, 7], "get_random_neighbor": [5, 7], "impute_inactive_valu": [5, 7], "offer": [6, 8], "pcs_new": 6, "writer": 6, "reader": 6, "deseri": 6, "share": 6, "across": 6, "experi": [6, 8], "tool": [6, 7, 8, 9, 10], "analyz": 6, "cave": [6, 8], "read_and_writ": [6, 8], "read": [6, 8, 9, 10], "jason_str": 6, "cs_json": 6, "cs_string": 6, "write": [6, 8], "open": [6, 8], "w": [6, 8], "json_str": [6, 8], "config": [6, 9, 10], "indent": 6, "written": 6, "file": [6, 8], "whitespac": 6, "human": 6, "readabl": 6, "descript": [6, 9], "algorithm": [6, 7, 9, 10], "depend": [6, 10], "There": [6, 8, 10], "version": 6, "librari": 6, "found": 6, "aclib": 6, "doc": 6, "smacv2": 6, "pysmac": 6, "year": 6, "2016": 6, "support": [6, 8], "smac": [6, 8], "v2": 6, "v3": 6, "modul": [6, 7, 9, 10], "pcs_string": 6, "debug": 6, "fh": [6, 8], "deserialized_conf": 6, "csh": 6, "27": 6, "explan": 6, "help": 7, "develop": 7, "necessari": 7, "represant": 7, "both": 7, "equival": 7, "inactiv": 7, "fix": 7, "know": 7, "grid": 7, "num_steps_dict": 7, "side": [7, 8], "cartesian": 7, "taken": 7, "within": [7, 8], "exchang": 7, "neighborhood": 7, "implement": [7, 8], "frank": 7, "hutter": [7, 9], "holger": 7, "h": 7, "hoo": 7, "kevin": 7, "leyton": 7, "brown": 7, "sequenti": 7, "model": [7, 10], "optim": [7, 8, 9], "In": [7, 8, 9], "proceed": 7, "confer": 7, "learn": [7, 8, 10], "intellig": 7, "lion": 7, "num_neighbor": 7, "neighbourhood": 7, "stdev": 7, "determin": 7, "neigbour": 7, "situat": 7, "draw": 7, "anoth": [7, 8, 10], "ordin": [7, 10], "next": [7, 10], "higher": [7, 9], "deactiv": 7, "previous": 7, "reject": 7, "10000": 7, "valueerror": 7, "calcul": 7, "imput": 7, "choosen": 7, "strategi": 7, "split": 7, "apart": 7, "concept": [8, 10], "explain": [8, 9], "introduc": [8, 9], "machin": [8, 10], "svm": 8, "classif": 8, "task": [8, 9], "therefor": 8, "regular": [8, 10], "mathbb": 8, "max_it": 8, "maximum": [8, 9], "solver": 8, "max": 8, "_iter": 8, "classifi": 8, "out": 8, "scope": 8, "thu": 8, "But": 8, "scikit": 8, "document": 8, "step": [8, 10], "alwai": [8, 10], "furthermor": [8, 9], "1234": [8, 9, 10], "decim": 8, "demonstr": [8, 9, 10], "purpos": [8, 10], "6169610992422154": 8, "66": 8, "now": 8, "call": 8, "conf": 8, "42": 8, "print": [8, 10], "kernel": [8, 10], "rbf": [8, 10], "sigmoid": 8, "linear": 8, "polynomi": 8, "sinc": 8, "finit": 8, "kernel_typ": 8, "poli": 8, "observ": 8, "chosen": [8, 10], "degre": 8, "coef0": 8, "gamma": 8, "independ": 8, "term": 8, "signific": 8, "coeffici": 8, "even": 8, "grow": 8, "veri": 8, "fast": 8, "sens": 8, "quickli": 8, "good": 8, "achiev": 8, "insert": 8, "second": 8, "1e": 8, "1e2": 8, "constrain": 8, "argument": 8, "relat": 8, "third": 8, "express": 8, "involv": 8, "multipl": 8, "cond_2": 8, "describ": [8, 10], "cond_1": 8, "cond_3": 8, "specif": 8, "wish": 8, "complet": [8, 10], "lot": 8, "due": 8, "inaccuraci": 8, "unlik": 8, "evalu": 8, "occur": 8, "again": 8, "tune": [8, 10], "penalti": 8, "norm": 8, "penal": 8, "l1": 8, "l2": 8, "loss": 8, "hing": 8, "squared_hing": 8, "dual": 8, "solv": 8, "problem": 8, "becaus": 8, "togeth": 8, "sure": [8, 10], "penalty_and_loss": 8, "constant_penalty_and_loss": 8, "penalty_and_du": 8, "last": 8, "output": 8, "2828": 8, "restored_conf": 8, "conduct": 8, "black": 8, "box": 8, "arxiv": [8, 9], "org": [8, 9], "ab": 8, "2109": 8, "09831": 8, "knowledg": 8, "region": 8, "optimum": 8, "design": 8, "accuraci": 8, "mlp": 8, "rate": 8, "dropout": 8, "99": 8, "tanh": 8, "relu": 8, "believ": 8, "25": [8, 10], "80": 8, "accordingli": 8, "natur": 8, "cover": [8, 10], "logmean": 8, "logstd": 8, "lr": 8, "907755278982137": 8, "302585092994046": 8, "05": 8, "001": 8, "__pdf__": 8, "peak": 8, "decai": 8, "go": [8, 10], "awai": 8, "test_point": 8, "logspac": 8, "04": 8, "03": 8, "02": 8, "01": 8, "accept": 8, "02456573": 8, "11009594": 8, "18151753": 8, "manag": 9, "variou": 9, "translat": 9, "text": 9, "often": 9, "smac3": [9, 10], "bohb": [9, 10], "auto": [9, 10], "group": 9, "project": 9, "visit": [9, 10], "homepag": 9, "featur": 9, "quickstart": 9, "besid": 9, "section": [9, 10], "later": 9, "myfloat": 9, "myint": 9, "speci": 9, "17013149799713567": 9, "5476203000512754": 9, "9": 9, "flexibl": 9, "c1": 9, "f1": 9, "explicitli": 9, "pip": 9, "cython": 9, "pypars": 9, "addition": 9, "compil": 9, "On": 9, "ubuntu": 9, "header": 9, "sudo": 9, "apt": 9, "essenti": 9, "python3": 9, "anaconda": 9, "miniconda": 9, "conda": 9, "gxx_linux": 9, "64": 9, "gcc_linux": 9, "articl": 9, "titl": 9, "boah": 9, "suit": 9, "multi": 9, "fidel": 9, "bayesian": 9, "analysi": 9, "author": 9, "m": 9, "lindauer": 9, "eggensperg": 9, "feurer": 9, "biedenkapp": 9, "j": 9, "marben": 9, "p": 9, "m\u00fcller": 9, "journal": 9, "1908": 9, "06756": 9, "lg": 9, "date": 9, "2019": 9, "autom": 10, "toolkit": 10, "free": 10, "select": 10, "heavi": 10, "tutori": 10, "subspac": 10, "turn": 10, "refer": 10, "ridg": 10, "regress": 10, "1915194503788923": 10, "And": 10, "let": 10, "need": 10, "randomli": 10, "modela": 10, "def": 10, "__init__": 10, "self": 10, "modelb": 10, "kernel_floop": 10, "flooper": 10, "floop": 10, "start": 10, "individu": 10, "slightli": 10, "staticmethod": 10, "75": 10, "cs_b": 10, "ll": 10, "emphasi": 10, "empti": 10, "extra": 10, "onc": 10, "howev": 10, "examin": 10, "7799758081188035": 10, "kind": 10, "model_typ": 10, "pop": 10, "append": 10, "introduct": 10}, "objects": {"ConfigSpace": [[3, 0, 1, "", "ForbiddenAndConjunction"], [3, 0, 1, "", "ForbiddenEqualsClause"], [3, 0, 1, "", "ForbiddenInClause"], [7, 1, 0, "-", "util"]], "ConfigSpace.api": [[4, 1, 0, "-", "distributions"]], "ConfigSpace.api.distributions": [[4, 0, 1, "", "Beta"], [4, 0, 1, "", "Normal"], [4, 0, 1, "", "Uniform"]], "ConfigSpace.api.types": [[4, 1, 0, "-", "categorical"], [4, 1, 0, "-", "float"], [4, 1, 0, "-", "integer"]], "ConfigSpace.api.types.categorical": [[4, 2, 1, "", "Categorical"]], "ConfigSpace.api.types.float": [[4, 2, 1, "", "Float"]], "ConfigSpace.api.types.integer": [[4, 2, 1, "", "Integer"]], "ConfigSpace.conditions": [[0, 0, 1, "", "AndConjunction"], [0, 0, 1, "", "EqualsCondition"], [0, 0, 1, "", "GreaterThanCondition"], [0, 0, 1, "", "InCondition"], [0, 0, 1, "", "LessThanCondition"], [0, 0, 1, "", "NotEqualsCondition"], [0, 0, 1, "", "OrConjunction"]], "ConfigSpace.configuration_space": [[1, 0, 1, "", "Configuration"], [2, 0, 1, "", "ConfigurationSpace"]], "ConfigSpace.configuration_space.Configuration": [[1, 3, 1, "", "__eq__"], [1, 3, 1, "", "__hash__"], [1, 3, 1, "", "__ne__"], [1, 3, 1, "", "get"], [1, 3, 1, "", "get_array"], [1, 3, 1, "", "get_dictionary"], [1, 3, 1, "", "is_valid_configuration"], [1, 3, 1, "", "items"], [1, 3, 1, "", "keys"], [1, 3, 1, "", "values"]], "ConfigSpace.configuration_space.ConfigurationSpace": [[2, 3, 1, "", "__eq__"], [2, 3, 1, "", "__hash__"], [2, 3, 1, "", "__iter__"], [2, 3, 1, "", "__ne__"], [2, 3, 1, "", "add_condition"], [2, 3, 1, "", "add_conditions"], [2, 3, 1, "", "add_configuration_space"], [2, 3, 1, "", "add_forbidden_clause"], [2, 3, 1, "", "add_forbidden_clauses"], [2, 3, 1, "", "add_hyperparameter"], [2, 3, 1, "", "add_hyperparameters"], [2, 3, 1, "", "check_configuration"], [2, 3, 1, "", "check_configuration_vector_representation"], [2, 3, 1, "", "estimate_size"], [2, 3, 1, "", "generate_all_continuous_from_bounds"], [2, 3, 1, "", "get"], [2, 3, 1, "", "get_active_hyperparameters"], [2, 3, 1, "", "get_all_conditional_hyperparameters"], [2, 3, 1, "", "get_all_unconditional_hyperparameters"], [2, 3, 1, "", "get_child_conditions_of"], [2, 3, 1, "", "get_children_of"], [2, 3, 1, "", "get_conditions"], [2, 3, 1, "", "get_default_configuration"], [2, 3, 1, "", "get_forbiddens"], [2, 3, 1, "", "get_hyperparameter"], [2, 3, 1, "", "get_hyperparameter_by_idx"], [2, 3, 1, "", "get_hyperparameter_names"], [2, 3, 1, "", "get_hyperparameters"], [2, 3, 1, "", "get_hyperparameters_dict"], [2, 3, 1, "", "get_idx_by_hyperparameter_name"], [2, 3, 1, "", "get_parent_conditions_of"], [2, 3, 1, "", "get_parents_of"], [2, 3, 1, "", "items"], [2, 3, 1, "", "keys"], [2, 3, 1, "", "remove_hyperparameter_priors"], [2, 3, 1, "", "sample_configuration"], [2, 3, 1, "", "seed"], [2, 3, 1, "", "substitute_hyperparameters_in_conditions"], [2, 3, 1, "", "substitute_hyperparameters_in_forbiddens"], [2, 3, 1, "", "values"]], "ConfigSpace.hyperparameters": [[4, 0, 1, "", "BetaFloatHyperparameter"], [4, 0, 1, "", "BetaIntegerHyperparameter"], [4, 0, 1, "", "CategoricalHyperparameter"], [4, 0, 1, "", "Constant"], [4, 0, 1, "", "NormalFloatHyperparameter"], [4, 0, 1, "", "NormalIntegerHyperparameter"], [4, 0, 1, "", "OrdinalHyperparameter"], [4, 0, 1, "", "UniformFloatHyperparameter"], [4, 0, 1, "", "UniformIntegerHyperparameter"]], "ConfigSpace.hyperparameters.BetaFloatHyperparameter": [[4, 3, 1, "", "get_max_density"], [4, 3, 1, "", "is_legal_vector"], [4, 3, 1, "", "pdf"], [4, 3, 1, "", "rvs"]], "ConfigSpace.hyperparameters.BetaIntegerHyperparameter": [[4, 3, 1, "", "get_max_density"], [4, 3, 1, "", "get_neighbors"], [4, 3, 1, "", "is_legal_vector"], [4, 3, 1, "", "pdf"], [4, 3, 1, "", "rvs"]], "ConfigSpace.hyperparameters.CategoricalHyperparameter": [[4, 3, 1, "", "is_legal_vector"], [4, 3, 1, "", "pdf"], [4, 3, 1, "", "rvs"], [4, 3, 1, "", "to_uniform"]], "ConfigSpace.hyperparameters.Constant": [[4, 3, 1, "", "is_legal_vector"], [4, 3, 1, "", "pdf"], [4, 3, 1, "", "rvs"]], "ConfigSpace.hyperparameters.NormalFloatHyperparameter": [[4, 3, 1, "", "get_max_density"], [4, 3, 1, "", "is_legal_vector"], [4, 3, 1, "", "pdf"], [4, 3, 1, "", "rvs"]], "ConfigSpace.hyperparameters.NormalIntegerHyperparameter": [[4, 3, 1, "", "get_max_density"], [4, 3, 1, "", "is_legal_vector"], [4, 3, 1, "", "pdf"], [4, 3, 1, "", "rvs"]], "ConfigSpace.hyperparameters.OrdinalHyperparameter": [[4, 3, 1, "", "check_default"], [4, 3, 1, "", "check_order"], [4, 3, 1, "", "get_neighbors"], [4, 3, 1, "", "get_num_neighbors"], [4, 3, 1, "", "get_order"], [4, 3, 1, "", "get_seq_order"], [4, 3, 1, "", "get_value"], [4, 3, 1, "", "has_neighbors"], [4, 3, 1, "", "is_legal"], [4, 3, 1, "", "is_legal_vector"], [4, 3, 1, "", "pdf"], [4, 3, 1, "", "rvs"]], "ConfigSpace.hyperparameters.UniformFloatHyperparameter": [[4, 3, 1, "", "get_max_density"], [4, 3, 1, "", "is_legal_vector"], [4, 3, 1, "", "pdf"], [4, 3, 1, "", "rvs"]], "ConfigSpace.hyperparameters.UniformIntegerHyperparameter": [[4, 3, 1, "", "get_max_density"], [4, 3, 1, "", "get_neighbors"], [4, 3, 1, "", "is_legal_vector"], [4, 3, 1, "", "pdf"], [4, 3, 1, "", "rvs"]], "ConfigSpace.read_and_write": [[6, 1, 0, "-", "json"], [6, 1, 0, "-", "pcs"], [6, 1, 0, "-", "pcs_new"]], "ConfigSpace.read_and_write.json": [[6, 2, 1, "", "read"], [6, 2, 1, "", "write"]], "ConfigSpace.read_and_write.pcs": [[6, 2, 1, "", "read"], [6, 2, 1, "", "write"]], "ConfigSpace.read_and_write.pcs_new": [[6, 2, 1, "", "read"], [6, 2, 1, "", "write"]], "ConfigSpace.util": [[7, 2, 1, "", "deactivate_inactive_hyperparameters"], [7, 2, 1, "", "fix_types"], [7, 2, 1, "", "generate_grid"], [7, 2, 1, "", "get_one_exchange_neighbourhood"], [7, 2, 1, "", "get_random_neighbor"], [7, 2, 1, "", "impute_inactive_values"]]}, "objtypes": {"0": "py:class", "1": "py:module", "2": "py:function", "3": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "module", "Python module"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"]}, "titleterms": {"condit": [0, 8], "equalscondit": 0, "notequalscondit": 0, "lessthancondit": 0, "greaterthancondit": 0, "incondit": 0, "andconjunct": 0, "orconjunct": 0, "configur": 1, "configurationspac": 2, "forbidden": [3, 8], "claus": [3, 8], "forbiddenequalsclaus": 3, "forbiddeninclaus": 3, "forbiddenandconjunct": 3, "hyperparamet": [4, 8], "simpl": 4, "type": 4, "float": [4, 8], "integ": [4, 8], "categor": [4, 8], "distribut": 4, "advanc": [4, 10], "ordin": 4, "constant": 4, "api": 5, "serial": [6, 8], "json": 6, "pc": 6, "new": 6, "format": 6, "old": 6, "util": 7, "user": 8, "guid": 8, "1st": 8, "exampl": 8, "2nd": 8, "3rd": 8, "4th": 8, "5th": 8, "place": 8, "prior": 8, "welcom": 9, "configspac": 9, "": 9, "document": 9, "get": 9, "start": 9, "instal": 9, "cite": 9, "quickstart": 10, "basic": 10, "usag": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Conditions": [[0, "conditions"]], "EqualsCondition": [[0, "equalscondition"]], "NotEqualsCondition": [[0, "notequalscondition"]], "LessThanCondition": [[0, "lessthancondition"]], "GreaterThanCondition": [[0, "greaterthancondition"]], "InCondition": [[0, "incondition"]], "AndConjunction": [[0, "andconjunction"]], "OrConjunction": [[0, "orconjunction"]], "Configuration": [[1, "configuration"]], "ConfigurationSpace": [[2, "configurationspace"]], "Forbidden Clauses": [[3, "forbidden-clauses"]], "ForbiddenEqualsClause": [[3, "forbiddenequalsclause"]], "ForbiddenInClause": [[3, "forbiddeninclause"]], "ForbiddenAndConjunction": [[3, "forbiddenandconjunction"]], "Hyperparameters": [[4, "hyperparameters"]], "Simple Types": [[4, "simple-types"]], "Float": [[4, "module-ConfigSpace.api.types.float"]], "Integer": [[4, "module-ConfigSpace.api.types.integer"]], "Categorical": [[4, "module-ConfigSpace.api.types.categorical"]], "Distributions": [[4, "distributions"]], "Advanced Types": [[4, "advanced-types"]], "Integer hyperparameters": [[4, "integer-hyperparameters"]], "Float hyperparameters": [[4, "float-hyperparameters"]], "Categorical Hyperparameter": [[4, "categorical-hyperparameter"]], "Ordinal Hyperparameter": [[4, "ordinal-hyperparameter"]], "Constant": [[4, "constant"]], "API": [[5, "api"]], "Serialization": [[6, "serialization"]], "Serialization to JSON": [[6, "module-ConfigSpace.read_and_write.json"]], "Serialization with pcs-new (new format)": [[6, "module-ConfigSpace.read_and_write.pcs_new"]], "Serialization with pcs (old format)": [[6, "module-ConfigSpace.read_and_write.pcs"]], "Utils": [[7, "utils"]], "User Guide": [[8, "user-guide"]], "1st Example: Integer hyperparameters and float hyperparameters": [[8, "st-example-integer-hyperparameters-and-float-hyperparameters"]], "2nd Example: Categorical hyperparameters and conditions": [[8, "nd-example-categorical-hyperparameters-and-conditions"]], "3rd Example: Forbidden clauses": [[8, "rd-example-forbidden-clauses"]], "4th Example Serialization": [[8, "th-example-serialization"]], "5th Example: Placing priors on the hyperparameters": [[8, "th-example-placing-priors-on-the-hyperparameters"]], "Welcome to ConfigSpace\u2019s documentation!": [[9, "welcome-to-configspace-s-documentation"]], "Get Started": [[9, "get-started"]], "Installation": [[9, "installation"]], "Citing the ConfigSpace": [[9, "citing-the-configspace"]], "Quickstart": [[10, "quickstart"]], "Basic Usage": [[10, "basic-usage"]], "Advanced Usage": [[10, "advanced-usage"]]}, "indexentries": {"andconjunction (class in configspace.conditions)": [[0, "ConfigSpace.conditions.AndConjunction"]], "equalscondition (class in configspace.conditions)": [[0, "ConfigSpace.conditions.EqualsCondition"]], "greaterthancondition (class in configspace.conditions)": [[0, "ConfigSpace.conditions.GreaterThanCondition"]], "incondition (class in configspace.conditions)": [[0, "ConfigSpace.conditions.InCondition"]], "lessthancondition (class in configspace.conditions)": [[0, "ConfigSpace.conditions.LessThanCondition"]], "notequalscondition (class in configspace.conditions)": [[0, "ConfigSpace.conditions.NotEqualsCondition"]], "orconjunction (class in configspace.conditions)": [[0, "ConfigSpace.conditions.OrConjunction"]], "configuration (class in configspace.configuration_space)": [[1, "ConfigSpace.configuration_space.Configuration"]], "__eq__() (configspace.configuration_space.configuration method)": [[1, "ConfigSpace.configuration_space.Configuration.__eq__"]], "__hash__() (configspace.configuration_space.configuration method)": [[1, "ConfigSpace.configuration_space.Configuration.__hash__"]], "__ne__() (configspace.configuration_space.configuration method)": [[1, "ConfigSpace.configuration_space.Configuration.__ne__"]], "get() (configspace.configuration_space.configuration method)": [[1, "ConfigSpace.configuration_space.Configuration.get"]], "get_array() (configspace.configuration_space.configuration method)": [[1, "ConfigSpace.configuration_space.Configuration.get_array"]], "get_dictionary() (configspace.configuration_space.configuration method)": [[1, "ConfigSpace.configuration_space.Configuration.get_dictionary"]], "is_valid_configuration() (configspace.configuration_space.configuration method)": [[1, "ConfigSpace.configuration_space.Configuration.is_valid_configuration"]], "items() (configspace.configuration_space.configuration method)": [[1, "ConfigSpace.configuration_space.Configuration.items"]], "keys() (configspace.configuration_space.configuration method)": [[1, "ConfigSpace.configuration_space.Configuration.keys"]], "values() (configspace.configuration_space.configuration method)": [[1, "ConfigSpace.configuration_space.Configuration.values"]], "configurationspace (class in configspace.configuration_space)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace"]], "__eq__() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.__eq__"]], "__hash__() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.__hash__"]], "__iter__() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.__iter__"]], "__ne__() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.__ne__"]], "add_condition() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.add_condition"]], "add_conditions() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.add_conditions"]], "add_configuration_space() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.add_configuration_space"]], "add_forbidden_clause() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.add_forbidden_clause"]], "add_forbidden_clauses() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.add_forbidden_clauses"]], "add_hyperparameter() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.add_hyperparameter"]], "add_hyperparameters() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.add_hyperparameters"]], "check_configuration() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.check_configuration"]], "check_configuration_vector_representation() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.check_configuration_vector_representation"]], "estimate_size() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.estimate_size"]], "generate_all_continuous_from_bounds() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.generate_all_continuous_from_bounds"]], "get() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get"]], "get_active_hyperparameters() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_active_hyperparameters"]], "get_all_conditional_hyperparameters() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_all_conditional_hyperparameters"]], "get_all_unconditional_hyperparameters() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_all_unconditional_hyperparameters"]], "get_child_conditions_of() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_child_conditions_of"]], "get_children_of() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_children_of"]], "get_conditions() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_conditions"]], "get_default_configuration() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_default_configuration"]], "get_forbiddens() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_forbiddens"]], "get_hyperparameter() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_hyperparameter"]], "get_hyperparameter_by_idx() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_hyperparameter_by_idx"]], "get_hyperparameter_names() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_hyperparameter_names"]], "get_hyperparameters() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_hyperparameters"]], "get_hyperparameters_dict() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_hyperparameters_dict"]], "get_idx_by_hyperparameter_name() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_idx_by_hyperparameter_name"]], "get_parent_conditions_of() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_parent_conditions_of"]], "get_parents_of() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.get_parents_of"]], "items() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.items"]], "keys() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.keys"]], "remove_hyperparameter_priors() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.remove_hyperparameter_priors"]], "sample_configuration() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.sample_configuration"]], "seed() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.seed"]], "substitute_hyperparameters_in_conditions() (configspace.configuration_space.configurationspace static method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.substitute_hyperparameters_in_conditions"]], "substitute_hyperparameters_in_forbiddens() (configspace.configuration_space.configurationspace static method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.substitute_hyperparameters_in_forbiddens"]], "values() (configspace.configuration_space.configurationspace method)": [[2, "ConfigSpace.configuration_space.ConfigurationSpace.values"]], "forbiddenandconjunction (class in configspace)": [[3, "ConfigSpace.ForbiddenAndConjunction"]], "forbiddenequalsclause (class in configspace)": [[3, "ConfigSpace.ForbiddenEqualsClause"]], "forbiddeninclause (class in configspace)": [[3, "ConfigSpace.ForbiddenInClause"]], "beta (class in configspace.api.distributions)": [[4, "ConfigSpace.api.distributions.Beta"]], "betafloathyperparameter (class in configspace.hyperparameters)": [[4, "ConfigSpace.hyperparameters.BetaFloatHyperparameter"]], "betaintegerhyperparameter (class in configspace.hyperparameters)": [[4, "ConfigSpace.hyperparameters.BetaIntegerHyperparameter"]], "categorical() (in module configspace.api.types.categorical)": [[4, "ConfigSpace.api.types.categorical.Categorical"]], "categoricalhyperparameter (class in configspace.hyperparameters)": [[4, "ConfigSpace.hyperparameters.CategoricalHyperparameter"]], "configspace.api.distributions": [[4, "module-ConfigSpace.api.distributions"]], "configspace.api.types.categorical": [[4, "module-ConfigSpace.api.types.categorical"]], "configspace.api.types.float": [[4, "module-ConfigSpace.api.types.float"]], "configspace.api.types.integer": [[4, "module-ConfigSpace.api.types.integer"]], "constant (class in configspace.hyperparameters)": [[4, "ConfigSpace.hyperparameters.Constant"]], "float() (in module configspace.api.types.float)": [[4, "ConfigSpace.api.types.float.Float"]], "integer() (in module configspace.api.types.integer)": [[4, "ConfigSpace.api.types.integer.Integer"]], "normal (class in configspace.api.distributions)": [[4, "ConfigSpace.api.distributions.Normal"]], "normalfloathyperparameter (class in configspace.hyperparameters)": [[4, "ConfigSpace.hyperparameters.NormalFloatHyperparameter"]], "normalintegerhyperparameter (class in configspace.hyperparameters)": [[4, "ConfigSpace.hyperparameters.NormalIntegerHyperparameter"]], "ordinalhyperparameter (class in configspace.hyperparameters)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter"]], "uniform (class in configspace.api.distributions)": [[4, "ConfigSpace.api.distributions.Uniform"]], "uniformfloathyperparameter (class in configspace.hyperparameters)": [[4, "ConfigSpace.hyperparameters.UniformFloatHyperparameter"]], "uniformintegerhyperparameter (class in configspace.hyperparameters)": [[4, "ConfigSpace.hyperparameters.UniformIntegerHyperparameter"]], "check_default() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.check_default"]], "check_order() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.check_order"]], "get_max_density() (configspace.hyperparameters.betafloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.BetaFloatHyperparameter.get_max_density"]], "get_max_density() (configspace.hyperparameters.betaintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.BetaIntegerHyperparameter.get_max_density"]], "get_max_density() (configspace.hyperparameters.normalfloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.NormalFloatHyperparameter.get_max_density"]], "get_max_density() (configspace.hyperparameters.normalintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.NormalIntegerHyperparameter.get_max_density"]], "get_max_density() (configspace.hyperparameters.uniformfloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.UniformFloatHyperparameter.get_max_density"]], "get_max_density() (configspace.hyperparameters.uniformintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.UniformIntegerHyperparameter.get_max_density"]], "get_neighbors() (configspace.hyperparameters.betaintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.BetaIntegerHyperparameter.get_neighbors"]], "get_neighbors() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.get_neighbors"]], "get_neighbors() (configspace.hyperparameters.uniformintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.UniformIntegerHyperparameter.get_neighbors"]], "get_num_neighbors() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.get_num_neighbors"]], "get_order() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.get_order"]], "get_seq_order() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.get_seq_order"]], "get_value() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.get_value"]], "has_neighbors() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.has_neighbors"]], "is_legal() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.is_legal"]], "is_legal_vector() (configspace.hyperparameters.betafloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.BetaFloatHyperparameter.is_legal_vector"]], "is_legal_vector() (configspace.hyperparameters.betaintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.BetaIntegerHyperparameter.is_legal_vector"]], "is_legal_vector() (configspace.hyperparameters.categoricalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.CategoricalHyperparameter.is_legal_vector"]], "is_legal_vector() (configspace.hyperparameters.constant method)": [[4, "ConfigSpace.hyperparameters.Constant.is_legal_vector"]], "is_legal_vector() (configspace.hyperparameters.normalfloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.NormalFloatHyperparameter.is_legal_vector"]], "is_legal_vector() (configspace.hyperparameters.normalintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.NormalIntegerHyperparameter.is_legal_vector"]], "is_legal_vector() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.is_legal_vector"]], "is_legal_vector() (configspace.hyperparameters.uniformfloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.UniformFloatHyperparameter.is_legal_vector"]], "is_legal_vector() (configspace.hyperparameters.uniformintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.UniformIntegerHyperparameter.is_legal_vector"]], "module": [[4, "module-ConfigSpace.api.distributions"], [4, "module-ConfigSpace.api.types.categorical"], [4, "module-ConfigSpace.api.types.float"], [4, "module-ConfigSpace.api.types.integer"], [6, "module-ConfigSpace.read_and_write.json"], [6, "module-ConfigSpace.read_and_write.pcs"], [6, "module-ConfigSpace.read_and_write.pcs_new"], [7, "module-ConfigSpace.util"]], "pdf() (configspace.hyperparameters.betafloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.BetaFloatHyperparameter.pdf"]], "pdf() (configspace.hyperparameters.betaintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.BetaIntegerHyperparameter.pdf"]], "pdf() (configspace.hyperparameters.categoricalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.CategoricalHyperparameter.pdf"]], "pdf() (configspace.hyperparameters.constant method)": [[4, "ConfigSpace.hyperparameters.Constant.pdf"]], "pdf() (configspace.hyperparameters.normalfloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.NormalFloatHyperparameter.pdf"]], "pdf() (configspace.hyperparameters.normalintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.NormalIntegerHyperparameter.pdf"]], "pdf() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.pdf"]], "pdf() (configspace.hyperparameters.uniformfloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.UniformFloatHyperparameter.pdf"]], "pdf() (configspace.hyperparameters.uniformintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.UniformIntegerHyperparameter.pdf"]], "rvs() (configspace.hyperparameters.betafloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.BetaFloatHyperparameter.rvs"]], "rvs() (configspace.hyperparameters.betaintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.BetaIntegerHyperparameter.rvs"]], "rvs() (configspace.hyperparameters.categoricalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.CategoricalHyperparameter.rvs"]], "rvs() (configspace.hyperparameters.constant method)": [[4, "ConfigSpace.hyperparameters.Constant.rvs"]], "rvs() (configspace.hyperparameters.normalfloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.NormalFloatHyperparameter.rvs"]], "rvs() (configspace.hyperparameters.normalintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.NormalIntegerHyperparameter.rvs"]], "rvs() (configspace.hyperparameters.ordinalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.OrdinalHyperparameter.rvs"]], "rvs() (configspace.hyperparameters.uniformfloathyperparameter method)": [[4, "ConfigSpace.hyperparameters.UniformFloatHyperparameter.rvs"]], "rvs() (configspace.hyperparameters.uniformintegerhyperparameter method)": [[4, "ConfigSpace.hyperparameters.UniformIntegerHyperparameter.rvs"]], "to_uniform() (configspace.hyperparameters.categoricalhyperparameter method)": [[4, "ConfigSpace.hyperparameters.CategoricalHyperparameter.to_uniform"]], "configspace.read_and_write.json": [[6, "module-ConfigSpace.read_and_write.json"]], "configspace.read_and_write.pcs": [[6, "module-ConfigSpace.read_and_write.pcs"]], "configspace.read_and_write.pcs_new": [[6, "module-ConfigSpace.read_and_write.pcs_new"]], "read() (in module configspace.read_and_write.json)": [[6, "ConfigSpace.read_and_write.json.read"]], "read() (in module configspace.read_and_write.pcs)": [[6, "ConfigSpace.read_and_write.pcs.read"]], "read() (in module configspace.read_and_write.pcs_new)": [[6, "ConfigSpace.read_and_write.pcs_new.read"]], "write() (in module configspace.read_and_write.json)": [[6, "ConfigSpace.read_and_write.json.write"]], "write() (in module configspace.read_and_write.pcs)": [[6, "ConfigSpace.read_and_write.pcs.write"]], "write() (in module configspace.read_and_write.pcs_new)": [[6, "ConfigSpace.read_and_write.pcs_new.write"]], "configspace.util": [[7, "module-ConfigSpace.util"]], "deactivate_inactive_hyperparameters() (in module configspace.util)": [[7, "ConfigSpace.util.deactivate_inactive_hyperparameters"]], "fix_types() (in module configspace.util)": [[7, "ConfigSpace.util.fix_types"]], "generate_grid() (in module configspace.util)": [[7, "ConfigSpace.util.generate_grid"]], "get_one_exchange_neighbourhood() (in module configspace.util)": [[7, "ConfigSpace.util.get_one_exchange_neighbourhood"]], "get_random_neighbor() (in module configspace.util)": [[7, "ConfigSpace.util.get_random_neighbor"]], "impute_inactive_values() (in module configspace.util)": [[7, "ConfigSpace.util.impute_inactive_values"]]}})